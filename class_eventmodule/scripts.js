// Generated by CoffeeScript 1.3.3
(function() {
  var ConcreteUI, EventModule, eventModule, ui,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventModule = (function() {

    function EventModule() {}

    EventModule.prototype.bind = function(evName, callback) {
      if (this._callbacks == null) {
        this._callbacks = {};
      }
      if (this._callbacks[evName] == null) {
        this._callbacks[evName] = [];
      }
      this._callbacks[evName].push(callback);
      return this;
    };

    EventModule.prototype.trigger = function(evName) {
      var callback, list, _i, _len, _ref;
      list = (_ref = this._callbacks) != null ? _ref[evName] : void 0;
      if (!list) {
        return this;
      }
      for (_i = 0, _len = list.length; _i < _len; _i++) {
        callback = list[_i];
        callback.apply(this);
      }
      return this;
    };

    return EventModule;

  })();

  eventModule = new EventModule;

  eventModule.bind('foo', function() {
    return alert('foo1');
  });

  eventModule.bind('foo', function() {
    return alert('foo2');
  });

  eventModule.trigger('foo');

  eventModule.trigger('foo');

  ConcreteUI = (function(_super) {

    __extends(ConcreteUI, _super);

    function ConcreteUI() {
      return ConcreteUI.__super__.constructor.apply(this, arguments);
    }

    ConcreteUI.prototype.doSomething = function() {
      this.trigger('dosomething');
      return this;
    };

    return ConcreteUI;

  })(EventModule);

  ui = new ConcreteUI;

  ui.bind('dosomething', function() {
    return alert('did it!');
  });

  ui.doSomething();

  ui.doSomething();

}).call(this);
